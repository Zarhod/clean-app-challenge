// src/AvatarSelectionModal.js
import React, { useState } from 'react';

const AvatarSelectionModal = ({ currentAvatar, onClose, onSave }) => {
  const [selectedAvatar, setSelectedAvatar] = useState(currentAvatar);

  // Liste d'emojis pour les avatars (curated pour ne pas √™tre excessive)
  const avatarOptions = [
    'üòÄ', 'üòÅ', 'üòÇ', 'üòá', 'üòà', 'üòâ', 'üòä', 'üòç', 'üòé', 'ü§ì', 'ü§î', 'ü§´', 'üò∂', 'üòê', 'üôÑ', 'üò¥', 'ü•≥', 'ü§©',
    'ü§ñ', 'üëæ', 'üëΩ', 'üëª', 'üéÉ', 'üò∫', 'üê∂', 'üê±', 'ü¶Å', 'üêØ', 'üêº', 'üê∏', 'üêô', 'üê†', 'ü¶ã', 'üêù', 'üêû', 'üï∑Ô∏è',
    'üå≥', 'üå≤', 'üå¥', 'üåµ', 'üå±', 'üåø', 'üå∏', 'üåº', 'üåª', 'üåé', 'üåà', '‚òÄÔ∏è', '‚≠ê', '‚ú®', '‚ö°Ô∏è', 'üî•', 'üí•', 'üíß',
    'üçé', 'üçä', 'üçå', 'üçâ', 'üçì', 'üçç', 'üçï', 'üçî', 'üçü', 'üç©', 'üç™', 'üéÇ', '‚òïÔ∏è', 'üç∫', 'üèÜ', 'ü•á', 'ü•à', 'ü•â',
    '‚öΩÔ∏è', 'üèÄ', 'üéÆ', 'üé≤', 'üß©', 'üìö', 'üé®', 'üéµ', '‚úàÔ∏è', 'üöÄ', 'üöó', 'üö≤', 'üè†', 'üí°', '‚è∞', 'üéÅ', 'üéà', 'üéâ',
    '‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'ü§é', 'üñ§', 'ü§ç', 'üíØ', '‚úÖ', 'üëç', 'üí™', 'üß†', 'üëÄ', 'üë£', 'üëÇ', 'üëÉ',
    'üßë‚Äçüíª', 'üßë‚Äçüç≥', 'üßë‚Äçüîß', 'üßë‚Äçüî¨', 'üßë‚ÄçüöÄ', 'üßë‚Äçüöí', 'üßë‚Äçüé§', 'üßë‚Äçüé®', 'üßë‚Äçüéì', 'üßë‚Äçüè´', 'üßë‚Äç‚öñÔ∏è', 'üßë‚Äçüåæ', 'üßë‚Äçüè≠', 'üßë‚Äçüíº', 'üßë‚ÄçüëÆ', 'üßë‚ÄçüïµÔ∏è',
    'üë®', 'üë©', 'üßë', 'üë¥', 'üëµ', 'üë∂', 'üëß', 'üë¶', 'üßë‚Äçü§ù‚Äçüßë', 'ü´Ç', 'üó£Ô∏è', 'üë§'
  ];

  const handleSave = () => {
    onSave(selectedAvatar); // onSave est g√©r√© par App.js pour mettre √† jour Supabase et le contexte
  };

  return (
    // z-index: 50 pour la modale principale
    <div className="fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50 p-4">
      <div className="bg-card rounded-3xl p-6 sm:p-8 shadow-2xl w-full max-w-lg text-center animate-fade-in-scale border border-primary/20 mx-auto flex flex-col h-[80vh]">
        <h3 className="text-2xl sm:text-3xl font-bold text-primary mb-4">S√©lectionner un Avatar</h3>

        <div className="flex-1 overflow-y-auto custom-scrollbar p-2 mb-4 bg-neutralBg rounded-lg border border-gray-200 grid grid-cols-6 sm:grid-cols-8 md:grid-cols-10 gap-2">
          {avatarOptions.map((avatar, index) => (
            <button
              key={index}
              onClick={() => setSelectedAvatar(avatar)}
              className={`p-2 rounded-lg text-3xl sm:text-4xl flex items-center justify-center transition duration-200 ease-in-out transform hover:scale-110
                          ${selectedAvatar === avatar ? 'bg-primary text-white shadow-lg' : 'bg-white hover:bg-gray-100 text-text shadow-sm'}`}
            >
              {avatar}
            </button>
          ))}
        </div>

        <div className="flex flex-col sm:flex-row justify-center gap-3 mt-4">
          <button
            onClick={handleSave}
            className="w-full sm:w-auto bg-success hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-full shadow-lg
                       transition duration-300 ease-in-out transform hover:scale-105 text-sm"
          >
            Enregistrer l'Avatar
          </button>
          <button
            onClick={onClose}
            className="w-full sm:w-auto bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-full shadow-lg
                       transition duration-300 ease-in-out transform hover:scale-105 text-sm"
          >
            Annuler
          </button>
        </div>
      </div>
    </div>
  );
};

export default AvatarSelectionModal;
